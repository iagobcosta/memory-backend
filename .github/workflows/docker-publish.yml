name: Build and publish Docker image

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Compute image metadata
        id: meta
        run: |
          # get version from package.json
          VERSION=$(node -p "require('./package.json').version")
          # short sha
          SHA=${GITHUB_SHA::7}
          # default image name if DOCKERHUB_REPO not provided
          if [ -n "${{ env.DOCKERHUB_REPO }}" ]; then
            IMAGE=${{ env.DOCKERHUB_REPO }}
          else
            IMAGE=${{ env.DOCKERHUB_USERNAME }}/memory-backend-api
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: /Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image }}:latest
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.sha }}

      - name: Image Info
        run: |
          echo "Published image: ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }}"
          echo "Also tagged: latest and ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.sha }}"
